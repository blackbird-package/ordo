#!/bin/bash

# system kernel
SYSKERNL=""

# system graphic
SYSDISPL=()

# system audio 
SYSSOUND=""

# package main 
MAINPACK=()

# package aurs 
AURSPACK=()

# package core 
COREPACK=()

# package flat 
FLATPACK=()



##
## SYSINFO KERN


##
## SYSINFO PACK

function blackbird_register_main() {
    MAINPACK+=($1)
}


function blackbird_register_aurs() {
    AURSPACK+=($1)
}


function blackbird_register_core() {
    COREPACK+=($1)
}


function blackbird_register_flat() {
    FLATPACK+=($1)
}


##
## SYSINFO USER



##
## SYSINFO DATA


function blackbird_sysinfo_cpudata() {

    if [[ ! -z $( lscpu | grep "Intel" )  ]];then

        SYSPROCS="intel" && blackbird_register_main "intel-ucode"

    elif [[ ! -z $( lscpu | grep "AMD" ) ]];then
    
        SYSPROCS="amd" && blackbird_register_main "amd-ucode"
    fi
}


function blackbird_sysinfo_vgadata() {

    OPTIMU=$( lspci | grep "VGA" | grep grep -P '^(?=.*Intel)(?=.*NVIDIA)' )
    NVIDIA=$( lspci | grep "VGA" | grep "NVIDIA" )
    RADEON=$( lspci | grep "VGA" | grep grep -P '^(?=.*AMD)(?=.*ATI)' )
    INTELS=$( lspci | grep "VGA" | grep "Intel" )


    if [[ ! -z $OPTIMU ]];then
        
        source "$ORDOPATH/bind/library/display/optimus"

    elif [[ ! -z $NVIDIA ]];then

        source "$ORDOPATH/bind/library/display/nvidia"
    
    elif [[ ! -z $RADEON ]];then

        source "$ORDOPATH/bind/library/display/radeon"

    elif [[ ! -z $INTELS ]];then

        source "$ORDOPATH/bind/library/display/intel"
    fi
}


function blackbird_sysinfo_profile() {

    envidata=("devices" "network" "storage" "protocol")

    for file in "${envidata[@]}"; do

        blackbird_progress "unpack $file data"
        data="$ORDOPATH/config/profile/$profiler/$file"

        if [[ -e $data  ]];then
            export $( xargs < "$data") && blackbird_done
        else
            blackbird_error "$file profile not found"
        fi
    done
}

function blackbird_sysinfo_defined() {

    protocol=("kernel" "crypto" "system" "storage" "network" "user" "mitigation" "security" "tunning" "desktop" "develop" "docker" "kvm" "podman" "utility")
    protodir="$BPAT/bind/model"

    for proto in "${protocol[@]}"; do

        blackbird_progress "unpack $proto protocol"
        $level=$(printenv $proto"_protocol");

        if [[ ! -z $level ]] && [[ -e "$protodir/define/$proto/$level" ]];then
 
            source "$protodir/define/$proto/$level" && blackbird_done
        else
            blackbird_info "$proto protocol not implemented for this profile"
        fi
    done
}


function blackbird_sysinfo_profile_old() {
    
    protocol=("kernel" "crypto" "system" "storage" "network" "user" "mitigation" "security" "tunning" "desktop" "develop" "docker" "kvm" "podman" "utility")
    protodir="$ORDOPATH/bind/model"

    for proto in "${protocol[@]}"; do

        blackbird_progress "unpack $proto protocol"
        level=$(printenv $proto"_protocol");

        if [[ ! -z $level ]] && [[ -e "$protodir/profile/$proto/$level" ]];then

            source "$protodir/profile/$proto/$level" && blackbird_done
        else
            blackbird_info "$proto protocol not implemented for this profile"
        fi
    done
}





function blackbird_sysinfo_protoco() {

    protocol=("systems" "modular" "desktop" "security" )

    rm -fr $ORDOPATH/library/protos/*;
    echo $ORDOPATH
    sleep 2

    for kindof in "${protocol[@]}"; do

        blackbird_progress "unpack $kindof protocol"
        level=$(printenv $kindof"_protocol");
        repos="https://github.com/blackbird-protocol/$kindof-protocol/raw/refs/heads/main/src/$kindof-protocol-$level.tar.gz"
        packs="$ORDOPATH/library/protos/$kindof.tar.gz"

        if [[ $(curl --head --silent --fail $repos ) ]] 2> /dev/null;then

            curl -LJo $packs $repos
            sleep 2
 
        else
            echo "This page does not exist."
        fi
    done
}



##
## SYSINFO MAIN 
function blackbird_sysinfo_main() {

    blackbird_sysinfo_profile

    blackbird_sysinfo_protoco

    #blackbird_sysinfo_defined

    #blackbird_sysinfo_cpudata

    #blackbird_sysinfo_vgadata

}