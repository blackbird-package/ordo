#!/bin/bash

## STORAGE PROTOCOL BLACKBIRD LEVEL 1
## lead : AL Muhdil Karim
## team : -


## SYSTEM VOLUME MAIN  SIZE
SIZE_BOOT="320M"
SIZE_KEYS="580M"
SIZE_PROC="45G"


## SYSTEM VOLUME PROC SIZE
SIZE_ROOT="15G"
SIZE_CONF="1G"              
SIZE_UBIN="5G"
SIZE_OPTS="10G"
SIZE_VARS="8G"
SIZE_VTMP="500M"
SIZE_VLOG="1G"
SIZE_VAUD="500M"
SIZE_VPAC="2G"
SIZE_SWAP="all"



##
## REGISTER PACKS
blackbird_regpack_main "xfsprogs lvm2"



##
## PREPARRING STORAGE
function blackbird_storage_prepare_umount_main() {

    MTPOINT=( "/mnt" "/mnt/boot" "/mnt/etc" "/mnt/usr/bin" "/mnt/opt" "/mnt/var" "/mnt/var/tmp" "/mnt/var/log" "/mnt/var/log/audit" \
              "/var/cache/pacman" "/mnt/home" "/mnt/srv" "/mnt/var/lib/dockers" "/mnt/var/lib/containers" "/mnt/var/lib/libvirt/images" )

    for point in "${MTPOINT[@]}"; do

        blackbird_progress "umount $point"
        if [[ ! -z $(/usr/bin/lsblk -o mountpoints | /usr/bin/grep $point ) ]];then
            echo "debug"
            #umount -R /mnt
        fi
        blackbird_done
    done

    blackbird_progress "umount all mounting point"
    blackbird_done
}


function blackbird_storage_prepare_lvdisk_base() {

    # for fresh instal or change physical partition size
    LVPROC=( "root" "ubin" "opts" "vars" "vlog" "vaud" "vtmp" "vpac" "swap" )
    LVDATA=( "home" "srvc" "pods" "host" )


    for proclv in "${LVPROC[@]}"; do

        blackbird_progress "remove /dev/proc/$proclv"
        if  [[ ! -z $(/usr/bin/lvs | /usr/bin/grep $proclv ) ]];then
            echo "debug"
            #yes | lvremove /dev/proc/$proclv > /dev/null
        fi
        blackbird_done

    done

    for datalv in "${LVDATA[@]}"; do

        blackbird_progress "remove /dev/data/$datalv"
        if [[ ! -z $(/usr/bin/lvs | /usr/bin/grep $datalv ) ]];then
            echo "debug"
            #yes | lvremove /dev/data/$datalv > /dev/null
        fi
        blackbird_done
    done


    blackbird_progress "remove volume group proc"
    if [[ ! -z $(/usr/bin/lvs | /usr/bin/grep "proc" ) ]];then
        echo "debug"
        #yes | vgremove proc > /dev/null
    fi
    blackbird_done


    blackbird_progress "remove volume group data"
    if [[ ! -z $(/usr/bin/lvs | /usr/bin/grep "data" ) ]];then
        echo "debug"
        #yes | vgremove data > /dev/null
    fi
    blackbird_done


    blackbird_progress "remove physical volume proc"
    if [[ ! -z $(/usr/bin/pvs | /usr/bin/grep "proc" ) ]];then
        echo "debug"
        #yes | pvremove /dev/mapper/lvm_proc > /dev/null  
    fi
    blackbird_done


    blackbird_progress "remove physical volume data"
    if [[ ! -z $(/usr/bin/pvs | /usr/bin/grep "data" ) ]];then
        echo "debug"
        #yes | pvremove /dev/mapper/lvm_data > /dev/null
    fi
    blackbird_done
}


function blackbird_storage_prepare_lvdisk_make() {
    blackbird_storage_prepare_lvdisk_base
}


function blackbird_storage_prepare_lvdisk_reco() {

    LVPROC=( "root" "ubin" "opts" "vars" "vlog" "vaud" "vtmp" "vpac" "swap" )
    LVDATA=( "home" "srvc" "pods" "host" )


    for proclv in "${LVPROC[@]}"; do

        blackbird_progress "unmount /dev/proc/$proclv"
        if [[ ! -z $(/usr/bin/lvs | /usr/bin/grep $proclv ) ]];then
            echo "debug"
            #yes | #umount /dev/data/$proclv > /dev/null
        fi
        blackbird_done

    done


    for datalv in "${LVDATA[@]}"; do

        blackbird_progress "unmount /dev/data/$datalv"
        if [[ ! -z $(/usr/bin/lvs | /usr/bin/grep $datalv ) ]];then
            echo "debug"
            #umount /dev/data/$datalv > /dev/null
        fi
        blackbird_done
        
    done


    blackbird_progress "umount volume group proc"
    if [[ ! -z $(/usr/bin/lvs | /usr/bin/grep "proc" ) ]];then
        echo "debug"
        #yes | vgchange -a n  data > /dev/null
    fi
    blackbird_done


    blackbird_progress "unmount physical volume proc"
    if [[ ! -z $(/usr/bin/pvs | /usr/bin/grep "proc" ) ]];then
        echo "debug"
        #yes | unmount /dev/mapper/lvm_proc > /dev/null
    fi
    blackbird_done 
    

    blackbird_progress "deactivate volume group data"
    if [[ ! -z $(/usr/bin/lvs | /usr/bin/grep "proc" ) ]];then
        echo "debug"
        #yes | vgchange -a n data > /dev/null
    fi
    blackbird_done 


    blackbird_progress "deactivate physical volume data"
    if [[ ! -z $(/usr/bin/pvs | /usr/bin/grep "proc" ) ]];then
        echo "debug"
        #yes | unmount /dev/mapper/lvm_data > /dev/null
    fi
    blackbird_done
}


function blackbird_storage_prepare_crypto_main() {

    blackbird_progress "deactivate luks volume root"
    #cryptsetup luksClose /dev/mapper/lvm_proc > /dev/null
    blackbird_done 

    blackbird_progress "deactivate luks volume data"
    #cryptsetup luksClose /dev/mapper/lvm_data > /dev/null
    blackbird_done 
}


function blackbird_storage_prepare_partio_base() {

    
    blackbird_progress "wipe installation drive"
    #parted $DISK_INIT
    blackbird_done


    blackbird_progress "create boot partition"
    #parted $PART_BOOT --script mklabel gpt mkpart "boot" fat32 1MiB 321MiB
    blackbird_done


    blackbird_progress "create keys partition"
    #parted $PART_KEYS --script mkpart "keys" ext4 321MiB 901MiB
    blackbird_done


    blackbird_progress "create root partition"
    #parted $PART_ROOT --script mkpart "proc" ext4 901MiB 52290MiB
    blackbird_done


    blackbird_progress "create data partition"
    #parted $PART_DATA --script mkpart "data" ext4 62290MiB 100%
    blackbird_done   
}


function blackbird_storage_initial_base() {

    blackbird_scope_init "Clean Installation Volume"
    blackbird_storage_prepare_umount_main
    blackbird_scope_done 
    
    blackbird_scope_init "Remove Obsolute Volume"
    blackbird_storage_prepare_lvdisk_base
    blackbird_scope_done 

    blackbird_scope_init "Umount Crypto Volume"
    blackbird_storage_prepare_crypto_main
    blackbird_scope_done 

    blackbird_scope_init "Create Master Partition"
    blackbird_storage_prepare_partio_base
    blackbird_scope_done
}


function blackbird_storage_initial_make() {

    blackbird_scope_init "Clean Installation Volume"
    blackbird_storage_prepare_umount_main
    blackbird_scope_done 
    
    blackbird_scope_init "Remove Obsolute Volume"
    blackbird_storage_prepare_lvdisk_make
    blackbird_scope_done 

    blackbird_scope_init "Umount Crypto Volume"
    blackbird_storage_prepare_crypto_main
    blackbird_scope_done 
}


function blackbird_storage_initial_reco() {

    blackbird_scope_init "Umount Target Volume"
    blackbird_storage_prepare_umount_main
    blackbird_scope_done 
    
    blackbird_scope_init "Umount Logical Volume"
    blackbird_storage_prepare_lvdisk_reco
    blackbird_scope_done 

    blackbird_scope_init "Umount Crypto Volume"
    blackbird_storage_prepare_crypto_main
    blackbird_scope_done
}




##
## STORAGE CRYPTOGRAPHY POLICY

function blackbird_storage_crypt_password_base() {

    read -p "insert your password : " LUKSPASS

    blackbird_progress "encrypting proc"
    #echo $LUKSPASS | cryptsetup luksFormat --type luks2 --sector-size 4096 --batch-mode $PART_PROC;
    blackbird_done


    blackbird_progress "encrypting data"
    #echo $LUKSPASS | cryptsetup luksFormat --type luks2 --sector-size 4096 --batch-mode $PART_DATA;
    blackbird_done


    blackbird_progress "decrypting proc partition"
    # echo $LUKSPASS | cryptsetup luksOpen $PART_PROC lvm_proc
    blackbird_done

    blackbird_progress "decrypting data partition"
    # echo $LUKSPASS | cryptsetup luksOpen $PART_DATA lvm_data
    blackbird_done
}


function blackbird_storage_crypt_password_make() {

   blackbird_storage_crypt_password_base
}


function blackbird_storage_crypt_password_reco() {

    blackbird_progress "decrypting proc partition"
    #cryptsetup luksOpen --key-file $LUKSKEYS $PART_PROC lvm_proc
    blackbird_done

    blackbird_progress "decrypting data partition"
    #cryptsetup luksOpen --key-file $LUKSKEYS $PART_DATA lvm_data
    blackbird_done
}


function blackbird_storage_cryptos_base() {

    blackbird_scope_init "Create Encrypted Partition"
    blackbird_storage_crypt_password_base
    blackbird_scope_done

}


function blackbird_storage_cryptos_make() {
    
    blackbird_scope_init "Rebuild Encrypted Partition"
    blackbird_storage_crypt_password_make
    blackbird_scope_done
}


function blackbird_storage_cryptos_reco() {
    blackbird_scope_init "Open Encrypted Partition"
    blackbird_storage_crypt_password_reco
    blackbird_scope_done
}


##
## LOGICAL PARTITIOM


function blackbird_storage_logical_volume_base() {

    blackbird_storage_logical_volume_reco

    blackbird_progress "create data physical volume"
    #pvcreate /dev/mapper/lvm_data
    blackbird_done

    blackbird_progress "create data group volume"
    #vgcreate data /dev/mapper/lvm_data
    blackbird_done
}


function blackbird_storage_logical_volume_make() {
   blackbird_storage_logical_volume_base
}


function blackbird_storage_logical_volume_reco() {

    blackbird_progress "create proc physical volume"
    #pvcreate /dev/mapper/lvm_proc
    blackbird_done

    blackbird_progress "create proc group volume"
    #vgcreate proc /dev/mapper/lvm_proc
    blackbird_done
}


function blackbird_storage_logical_base() {

    blackbird_scope_init "Create Logical Partition"
    blackbird_storage_logical_volume_base
    blackbird_scope_done
}


function blackbird_storage_logical_make() {

    blackbird_scope_init "Format Logical Partition"
    blackbird_storage_logical_volume_make
    blackbird_scope_done

}


function blackbird_storage_logical_reco() {

    blackbird_scope_init "Assign Logical Partition"
    blackbird_storage_logical_volume_reco
    blackbird_scope_done

}



##
## LOGICAL SYSTEM


# logical root
function blackbird_storage_sysroot_volume_base() {

    #yes | lvcreate -L $SIZE_ROOT proc -n root
    blackbird_storage_sysroot_volume_reco
}


function blackbird_storage_sysroot_volume_make() {
    blackbird_storage_sysroot_volume_base
}


function blackbird_storage_sysroot_volume_reco() {

    echo "debug"
    #yes | mkfs.ext4 -b 4096 /dev/proc/root
    #mount /dev/proc/root /mnt
}


# logical conf
function blackbird_storage_sysconf_volume_base() {
    
    #yes | lvcreate -L $SIZE_CONF proc -n conf
    blackbird_storage_sysconf_volume_reco
}


function blackbird_storage_sysconf_volume_make() {
    blackbird_storage_sysconf_volume_base
}


function blackbird_storage_sysconf_volume_reco() {

    if [[ -d /mnt/etc/ ]];then
        mkdir /mnt/etc/
    fi
    #yes | mkfs.ext4 -b 4096 /dev/proc/conf
    #mount -o defaults,rw,nosuid,nodev,noexec,relatime /dev/proc/conf /mnt/etc
}



# logical ubin
function blackbird_storage_sysubin_volume_base() {
     
    #lvcreate -L $SIZE_UBIN proc -n ubin
    blackbird_storage_sysubin_volume_reco
}


function blackbird_storage_sysubin_volume_make() {
    
    blackbird_storage_sysubin_volume_base
}


function blackbird_storage_sysubin_volume_reco() {
    
    if [[ -d /mnt/usr/ ]];then
        mkdir /mnt/usr/
    fi

    if [[ -d /mnt/usr/bin ]];then
        mkdir /mnt/usr/bin
    fi

    #yes | mkfs.ext4 -b 4096 /dev/proc/ubin
    #mount -o defaults,rw,nosuid,nodev,noexec,relatime /dev/proc/conf /mnt/etc
}


# logical opts
function blackbird_storage_sysopts_volume_base() {
    
    #lvcreate -L $SIZE_OPTS proc -n opts
    blackbird_storage_sysopts_volume_base
}


function blackbird_storage_sysopts_volume_make() {   
    blackbird_storage_sysopts_volume_base
}


function blackbird_storage_sysopts_volume_reco() {
    
    if [[ -d /mnt/var/ ]];then
        mkdir /mnt/opt/
    fi
    #yes | mkfs.ext4 -b 4096 /dev/proc/opts
    #mount -o defaults,rw,nosuid,nodev,relatime /dev/proc/opts /mnt/opt
}



# logical vars
function blackbird_storage_sysvars_volume_base() {
    
    #lvcreate -L $SIZE_VARS proc -n vars
    blackbird_storage_sysvars_volume_repo
}


function blackbird_storage_sysvars_volume_make() {
    
    blackbird_storage_sysvars_volume_base
}


function blackbird_storage_sysvars_volume_reco() {
    
    if [[ -d /mnt/var/ ]];then
        mkdir /mnt/var/
    fi
    #yes | mkfs.ext4 -b 4096 /dev/proc/vars
    #mount -o defaults,rw,nosuid,nodev,noexec,relatime /dev/proc/vars /mnt/var
}



# logical vtmp
function blackbird_storage_sysvtmp_volume_base() {
    
    # lvcreate -L $SIZE_VTMP proc -n vtmp
    blackbird_storage_sysvtmp_volume_reco
}


function blackbird_storage_sysvtmp_volume_make() {
    blackbird_storage_sysvtmp_volume_base
}


function blackbird_storage_sysvtmp_volume_reco() {
    
    if [[ -d /mnt/var/ ]];then
        mkdir /mnt/var/
    fi

    if [[ -d /mnt/var/tmp ]];then
        mkdir /mnt/var/tmp
    fi

    # yes | mkfs.ext4 -b 4096 /dev/proc/vtmp
    # mount -o defaults,rw,nosuid,nodev,noexec,relatime /dev/proc/vtmp /mnt/var/tmp
}


# logical vlog
function blackbird_storage_sysvlog_volume_base() {
    
    lvcreate -L $SIZE_VLOG proc -n vlog
    blackbird_storage_logic_procvaud
}


function blackbird_storage_sysvlog_volume_make() {  
    blackbird_storage_sysvlog_volume_base
}


function blackbird_storage_sysvlog_volume_reco() {
    
    if [[ -d /mnt/var/ ]];then
        mkdir /mnt/var/
    fi

    if [[ -d /mnt/var/log/ ]];then
        mkdir /mnt/var/log/
    fi
    #yes | mkfs.ext4 -b 4096 /dev/proc/vlog
    #mount -o defaults,rw,nosuid,nodev,noexec,relatime /dev/proc/vlog /mnt/var/log
}


# logical vaud
function blackbird_storage_sysvaud_volume_base() {
    
    lvcreate -L $SIZE_VAUD proc -n vaud
    blackbird_storage_stsvaud_volume_reco
}


function blackbird_storage_sysvaud_volume_make() {
    blackbird_storage_stsvaud_volume_base
}   


function blackbird_storage_sysvaud_volume_reco() {
    
    if [[ -d /mnt/var/ ]];then
        mkdir /mnt/var/
    fi

    if [[ -d /mnt/var/log/ ]];then
        mkdir /mnt/var/log/
    fi

    if [[ -d /mnt/var/log/audit ]];then
        mkdir /mnt/var/log/audit
    fi
    #yes | mkfs.ext4 -b 4096 /dev/proc/vaud
    #mount -o defaults,rw,nosuid,nodev,noexec,relatime /dev/proc/vaud /mnt/var/log/audit
}


# logical vpac
function blackbird_storage_sysvpac_volume_base() {
    
    lvcreate -L $SIZE_VPAC proc -n vpac
    blackbird_storage_sysvpac_volume_reco
}


function blackbird_storage_sysvpac_volume_make() {
    blackbird_storage_sysvpac_volume_base
}


function blackbird_storage_sysvpac_volume_reco() {
    
    if [[ -d /mnt/var/cache/ ]];then
        mkdir /mnt/var/cache/
    fi

    if [[ -d /mnt/var/cache/pacman ]];then
        mkdir /mnt/var/cache/pacman
    fi
    #yes | mkfs.ext4 -b 4096 /dev/proc/vpac
    #mount -o defaults,rw,nosuid,nodev,relatime /dev/proc/vpac /mnt/var/cache/pacman
}


# logical swap
function blackbird_storage_sysswap_volume_base() {
    echo debug
    #lvcreate -l 100%FREE proc -n swap
    #mkswap /dev/proc/swap
    #swapon /dev/proc/swap
}


function blackbird_storage_sysswap_volume_make() {
    blackbird_storage_sysswap_volume_base
}


function blackbird_storage_sysswap_volume_reco() {
    echo debug
    #mkswap /dev/proc/swap
    #swapon /dev/proc/swap
}


##
## DISKPOOL PROC

function blackbird_storage_procvol_base() {

    blackbird_scope_init "System Storage Pool"

    blackbird_progress "create root partition"
    blackbird_storage_sysroot_volume_base
    blackbird_done

    blackbird_progress "create etc partition"
    blackbird_storage_sysconf_volume_base
    blackbird_done

    blackbird_progress "create usr/bin partition"
    blackbird_storage_sysubin_volume_base
    blackbird_done

    blackbird_progress "create opt partition"
    blackbird_storage_sysopts_volume_base
    blackbird_done

    blackbird_progress "create var partition"
    blackbird_storage_sysvars_volume_base
    blackbird_done

    blackbird_progress "create var/tmp partition"
    blackbird_storage_sysvtmp_volume_base
    blackbird_done

    blackbird_progress "create var/log partition"
    blackbird_storage_sysvlog_volume_base
    blackbird_done

    blackbird_progress "create var/log/audit partition"
    blackbird_storage_sysvaud_volume_base
    blackbird_done

    blackbird_progress "create var/pacman/cache partition"
    blackbird_storage_sysvpac_volume_base
    blackbird_done

    blackbird_progress "create swap partition"
    blackbird_storage_sysswap_volume_base
    blackbird_done

    blackbird_scope_done
}


function blackbird_storage_procvol_make() {

    blackbird_scope_init "System Storage Pool"

    blackbird_progress "rebuild root partition"
    blackbird_storage_sysroot_volume_make
    blackbird_done

    blackbird_progress "rebuild etc partition"
    blackbird_storage_sysconf_volume_make
    blackbird_done

    blackbird_progress "rebuild /usr/bin partition"
    blackbird_storage_sysubin_volume_make
    blackbird_done

    blackbird_progress "rebuild opt partition"
    blackbird_storage_sysopts_volume_make
    blackbird_done

    blackbird_progress "rebuild var partition"
    blackbird_storage_sysvars_volume_make
    blackbird_done

    blackbird_progress "rebuild var/tmp partition"
    blackbird_storage_sysvtmp_volume_make
    blackbird_done

    blackbird_progress "rebuild var/log partition"
    blackbird_storage_sysvlog_volume_make
    blackbird_done

    blackbird_progress "rebuild var/log/audit partition"
    blackbird_storage_sysvaud_volume_make
    blackbird_done

    blackbird_progress "rebuild package cache partition"
    blackbird_storage_sysvpac_volume_make
    blackbird_done

    blackbird_progress "rebuild swap partition"
    blackbird_storage_sysswap_volume_make
    blackbird_done

    blackbird_scope_done
}


function blackbird_storage_procvol_reco() {

    blackbird_scope_init "System Storage Pool"

    blackbird_progress "format root partition"
    blackbird_storage_sysroot_volume_reco
    blackbird_done

    blackbird_progress "format etc partition"
    blackbird_storage_sysconf_volume_reco
    blackbird_done

    blackbird_progress "format usr/bin partition"
    blackbird_storage_sysubin_volume_reco
    blackbird_done

    blackbird_progress "format opt partition"
    blackbird_storage_sysopts_volume_reco
    blackbird_done

    blackbird_progress "format var partition"
    blackbird_storage_sysvars_volume_reco
    blackbird_done

    blackbird_progress "format var/tmp partition"
    blackbird_storage_sysvtmp_volume_reco
    blackbird_done

    blackbird_progress "format var/log partition"
    blackbird_storage_sysvlog_volume_reco
    blackbird_done

    blackbird_progress "format var/audit partition"
    blackbird_storage_sysvaud_volume_reco
    blackbird_done

    blackbird_progress "format package partition"
    blackbird_storage_sysvpac_volume_reco
    blackbird_done

    blackbird_progress "format swap partition"
    blackbird_storage_sysswap_volume_reco
    blackbird_done

    blackbird_scope_done
}




##
## LOGICAL DATA

# logical srvc
function blackbird_storage_datsrvc_volume_base() {

    #lvcreate -L $SIZE_SRVS data -n srvc
    #yes | mkfs.ext4 -b 4096 /dev/data/srvc
    blackbird_storage_datsrvc_volume_base
}


function blackbird_storage_datsrvc_volume_make() {
    #yes | mkfs.ext4 -b 4096 /dev/data/srvc
    blackbird_storage_datsrvc_volume_reco
}


function blackbird_storage_datsrvc_volume_reco() {

    if [[ -d /mnt/srv ]];then
       mkdir /mnt/srv
    fi
    #mount -o defaults,rw,nosuid,nodev,relatime /dev/data/srvc /mnt/srv
}



# logical pods
function blackbird_storage_datpods_volume_base() {

    #lvcreate -L $SIZE_PODS data -n pods
    #yes | mkfs.xfs -fs size=4096 /dev/data/pods
    blackbird_storage_datpods_volume_reco
}


function blackbird_storage_datpods_volume_make() {
    #yes | mkfs.xfs -fs size=4096 /dev/data/pods
    blackbird_storage_datpods_volume_reco
}


function blackbird_storage_datpods_volume_reco() {

    if [[ -d /mnt/var/lib ]];then
        mkdir /mnt/var/lib
    fi

    if [[ -d /mnt/var/lib/containers ]];then
        mkdir /mnt/var/lib/containers
    fi
    #mount -o defaults,rw,nosuid,nodev,relatime /dev/data/pods /mnt/var/lib/containers
}


# logical virt
function blackbird_storage_datvirt_volume_base() {
    
    #lvcreate -L $SIZE_VIRT data -n host
    #yes | mkfs.xfs -fs size=4096 /dev/data/host
    blackbird_storage_datvirt_volume_reco
}


function blackbird_storage_datvirt_volume_make() {
    #yes | mkfs.xfs -fs size=4096 /dev/data/host
    blackbird_storage_datvirt_volume_reco
}


function blackbird_storage_datvirt_volume_reco() {

    if [ -d /mnt/var/lib ];then
        mkdir /mnt/var/lib
    fi

    if [ -d /mnt/var/lib/libvirt ];then
        mkdir /mnt/var/lib/libvirt
    fi

    if [ -d /mnt/var/lib/libvirt/images ];then
        mkdir /mnt/var/lib/libvirt/images
    fi
    # mount -o defaults,rw,nosuid,nodev,relatime /dev/data/host /mnt/var/lib/libvirt/images
}



# logical home
function blackbird_storage_dathome_volume_base() {

    if [[ $SIZE_HOME == "all" ]];then
        echo "debug"
        #yes | lvcreate -l 100%FREE data -n home
    else
        echo "debug"
        #yes | lvcreate -L $SIZE_HOME data -n home
    fi
   
    #yes | mkfs.ext4 -b 4096 /dev/data/home
    blackbird_storage_syshome_volume_reco
}


function blackbird_storage_dathome_volume_make() {
    #yes | mkfs.ext4 -b 4096 /dev/data/home
    blackbird_storage_syshome_volume_reco
}


function blackbird_storage_dathome_volume_reco() {

    if [ -d /mnt/home ];then
        mkdir /mnt/home
    fi
    #mount -o defaults,rw,nosuid,nodev,noexec,relatime /dev/data/home /mnt/home
}


##
## DISKPOOL DATA

function blackbird_storage_datavol_base() {

    blackbird_scope_init "Data Storage Pool"

    blackbird_progress "create srv partition"
    blackbird_storage_datsrvc_volume_base
    blackbird_done

    blackbird_progress "create podman partition"
    blackbird_storage_datpods_volume_base
    blackbird_done

    blackbird_progress "create kvm partition"
    blackbird_storage_datvirt_volume_base
    blackbird_done

    blackbird_progress "create home partition"
    blackbird_storage_dathome_volume_base
    blackbird_done

    blackbird_scope_done
}


function blackbird_storage_datavol_make() {

    blackbird_scope_init "Data Storage Pool"

    blackbird_progress "rebuild srv partition"
    blackbird_storage_datpods_volume_make
    blackbird_done

    blackbird_progress "rebuild podman partition"
    blackbird_storage_datpods_volume_make
    blackbird_done

    blackbird_progress "rebuild kvm partition"
    blackbird_storage_datvirt_volume_make
    blackbird_done

    blackbird_progress "rebuild home partition"
    blackbird_storage_dathome_volume_make
    blackbird_done

    blackbird_scope_done
}


function blackbird_storage_datavol_reco() {

    blackbird_scope_init "Data Storage Pool"

    blackbird_progress "format srv partition"
    blackbird_storage_datpods_volume_reco
    blackbird_done

    blackbird_progress "format podman partition"
    blackbird_storage_datpods_volume_reco
    blackbird_done

    blackbird_progress "format kvm partition"
    blackbird_storage_datvirt_volume_reco
    blackbird_done

    blackbird_progress "format home partition"
    blackbird_storage_dathome_volume_reco
    blackbird_done

    blackbird_scope_done
}



##
## BOOT VOLUME

function blackbird_storage_bootvol_volume_base() {

    blackbird_progress "format boot partition"
    #yes | mkfs.vfat -F32 -S 4096 -n BOOT $DRIVEPATHS_BOOT
    blackbird_done

    blackbird_storage_bootvol_volume_reco
}


function blackbird_storage_bootvol_volume_make() {
    blackbird_storage_bootvol_volume_base
}


function blackbird_storage_bootvol_volume_reco() {
    
    blackbird_progress "create boot mount target"
    if [ -d /mnt/boot ];then
	    mkdir /mnt/boot
    fi
    blackbird_done

    blackbird_progress "mounting boot partition"
    #mount -o defaults,rw,nosuid,nodev,noexec,relatime $DRIVEPATHS_BOOT /mnt/boot
    blackbird_done
}


function blackbird_storage_bootvol_base() {

    blackbird_scope_init "Boot Storage Pool"
    blackbird_storage_bootvol_volume_base
    blackbird_scope_done
}


function blackbird_storage_bootvol_make() {
    
    blackbird_scope_init "Boot Storage Pool"
    blackbird_storage_bootvol_volume_make
    blackbird_scope_done

}


function blackbird_storage_bootvol_reco() {

    blackbird_scope_init "Boot Storage Pool"
    blackbird_storage_bootvol_volume_reco
    blackbird_scope_done
}


##
## TMPFS VOLUME

function blackbird_storage_tempvol_fstab() {
    echo "debug"
    #genfstab -U /mnt > /mnt/etc/fstab
}


function blackbird_storage_tempvol_tmpfs() {
    echo "debug"
    #echo 'tmpfs     /tmp        tmpfs   defaults,rw,nosuid,nodev,noexec,relatime,size=1G    0 0' >> /mnt/etc/fstab
}


function blackbird_storage_tempvol_shmfs() {
    echo "debug"
    #echo 'tmpfs     /dev/shm    tmpfs   defaults,rw,nosuid,nodev,noexec,relatime,size=1G    0 0' >> /mnt/etc/fstab
}


function blackbird_storage_tempvol_main() {
    
    blackbird_scope_init "TMPFS Storage Pool"

    blackbird_progress "generate partition layout"
    blackbird_storage_tempvol_fstab
    blackbird_done


    blackbird_progress "create tmp partition"
    blackbird_storage_tempvol_tmpfs
    blackbird_done


    blackbird_progress "create shm partition"
    blackbird_storage_tempvol_shmfs
    blackbird_done

    blackbird_scope_done   
}



##
## MAIN FUNCTION
function blackbird_storage_prepare_base() {
    blackbird_storage_initial_base
    blackbird_storage_cryptos_base
    blackbird_storage_logical_base
    blackbird_storage_procvol_base
    blackbird_storage_datavol_base
    blackbird_storage_bootvol_reco
    blackbird_storage_tempvol_main
}


function blackbird_storage_prepare_make() {
    blackbird_storage_initial_make
    blackbird_storage_cryptos_make
    blackbird_storage_logical_make
    blackbird_storage_procvol_make
    blackbird_storage_datavol_make
    blackbird_storage_bootvol_reco
    blackbird_storage_tempvol_main
}


function blackbird_storage_prepare_reco() {
    echo "debug storage recovery"
    blackbird_storage_initial_reco
    blackbird_storage_cryptos_reco
    blackbird_storage_logical_reco
    blackbird_storage_procvol_reco
    blackbird_storage_datavol_reco
    blackbird_storage_bootvol_reco
    blackbird_storage_tempvol_main
}