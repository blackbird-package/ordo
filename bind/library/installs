#!/bin/bash

# system main package
MAINPACK=()

# system aurs package
AURSPACK=()

# system core package
COREPACK=()

# system flatpack package
FLATPACK=()


function blackbird_regpack_main() {
    MAINPACK+=($1)
}


function blackbird_regpack_aurs() {
    AURSPACK+=($1)
}


function blackbird_regpack_core() {
    COREPACK+=($1)
}


function blackbird_regpack_flat() {
    FLATPACK+=($1)
}


##
## CHROOT WRAP

function userc() {
    arch-chroot /mnt /bin/bash -c 'sudo -H -u installman /bin/bash -c "'$1'"' 
}


function rootc() {
    arch-chroot /mnt /bin/bash -c "$1"
}



## 
### MODULE

function blackbird_installs_module_yays() {

    if [ "$(type -t grep)" = "file" ]; then

        echo "yay installed"
    else
        userc "git clone https://aur.archlinux.org/yay /tmp/yay"
        userc "makepkg -sric --dir /tmp/yay --noconfirm"
    fi
    
}


function blackbird_installs_module_aurs() {

    if [ "$(type -t grep)" = "file" ]; then

        echo "yay installed"
    else
        userc "git clone https://aur.archlinux.org/yay /tmp/yay"
        userc "makepkg -sric --dir /tmp/yay --noconfirm"
    fi

    echo ${AURSPACK[*]}
}


function blackbird_installs_module_core() {

    blackbird_scope_init "Install Core Packages"

    if [[ ! -d  /mnt/opt/cache ]];then
        mkdir /mnt/opt/cache
    else
        yes | rm -fr /mnt/opt/cache/*
    fi

    for coreapp in "${COREPACK[@]}"; do

        blackbird_progress "install $coreapp"
        rootc "git clone https://github.com/linux-blackbird/$coreapp /opt/cache/$coreapp"
        rootc "chmod +x /opt/cache/$coreapp"
        rootc "/bin/bash /opt/cache/$coreapp/make"
        blackbird_done
    done

    blackbird_scope_done
}


function blackbird_installs_module_flat() {
    
    blackbird_scope_init "Install Flatpak Packages"

    for flatapp in "${FLATPACK[@]}"; do
        blackbird_progress "install $flatapp"
        rootc "/usr/bin/flatpak install --system --noninteractive $flatapp"
        blackbird_done
    done

    blackbird_scope_done
}


function blackbird_installs_module_base() {

    blackbird_scope_init "Install Base Packages"
    pacstrap /mnt ${MAINPACK[*]} --noconfirm
    blackbird_scope_done
    sleep 5
}


function blackbird_package_install_aurs() {
    blackbird_scope_init "Install Community Packages"
    blackbird_package_install_module_yays
    blackbird_package_install_module_aurs
    blackbird_scope_done    
}

function blackbird_package_install_flat() {
    blackbird_scope_init "Install Flatpak Packages"
    blackbird_package_install_module_flat
    blackbird_scope_done
}





##
## MAIN FUNCTION

function blackbird_rebased() {
    
    ## install main package
    blackbird_unpacks_prepare_main
    blackbird_systems_prepare_main
    #blackbird_storage_prepare_base
    #blackbird_installs_module_base
    #blackbird_systems_install_prep
    #blackbird_installs_module_core
    #blackbird_installs_module_flat
}



function blackbird_recover() {
    
    ## install main package
    blackbird_package_install_init
    #blackbird_systems_storage_main
    
    
    ## install basic configuration
    #blackbird_syscore_prepare_init


    ## create prepared user
    #blackbird_systems_install_conf

    ## install extended package
    #blackbird_package_install_aurs
    #blackbird_package_install_core
    #blackbird_package_install_flat


    ## configure protocol
    #blackbird_cryptos_prepare_init
    #blackbird_desktop_prepare_init
    #blackbird_develop_prepare_init
    #blackbird_kernels_prepare_reco
    #blackbird_virtman_prepare_init
    #blackbird_prevent_prepare_init
    #blackbird_network_prepare_init
    #blackbird_podmans_prepare_init
    #blackbird_secured_prepare_init
    #lackbird_tunning_prepare_init
    #blackbird_usercfg_prepare_init
    #blackbird_utility_prepare_init

    ## remove prepard user
    blackbird_systems_prepare_done
}