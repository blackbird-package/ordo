#!/bin/bash


SYSKERNL=""

# system desktop
SYSWINDO=""

# device procesor
SYSPROCS=""

# device graphic
SYSDISPL=()

# device audio 
SYSSOUND=""



##
## CORESYSTEM DATA


function blackbird_unpacks_prepare_sysdata_cpu() {

    if [[ ! -z $( lscpu | grep "Intel")  ]];then

        SYSPROCS="intel"

    elif [[  -z $( lscpu | grep "AMD") ]];then
    
        SYSPROCS="amd"
      fi
}


function blackbird_unpacks_prepare_sysdata_vga() {

    if [[ ! -z $( lspci | grep "VGA" | grep "Intel" ) ]];then
        SYSDISPL+=("intel")
    fi

    if [[ ! -z $( lspci | grep "VGA" | grep "NVIDIA" ) ]];then
        SYSDISPL+=("nvidia")
    fi

    if [[ ! -z $( lspci | grep "VGA" | grep "AMD" ) ]] || [[ ! -z $( lspci | grep "VGA" | grep "ATI" ) ]];then
        SYSDISPL+=("radeon")
    fi
}


function blackbird_unpacks_prepare_sysdata() {

    blackbird_unpacks_prepare_sysdata_cpu
    blackbird_unpacks_prepare_sysdata_vga
}



## 
## INSTALLATION DATA
function blackbird_unpacks_prepare_envdata_profil() {

    protocol=("kernel" "crypto" "system" "storage" "network" "user" "mitigation" "security" "tunning" "desktop" "develop" "docker" "kvm" "podman" "utility")
    protodir="$BPAT/bind/model"

    for proto in "${protocol[@]}"; do

        blackbird_progress "unpack $proto protocol"
        level=$(printenv $proto"_protocol");

        if [[ ! -z $level ]] && [[ -e "$protodir/profile/$proto/$level" ]];then
 
            source "$protodir/profile/$proto/$level"
            blackbird_done

        else

            blackbird_info "$proto protocol not implemented for this profile"
        fi
    done
}


function blackbird_unpacks_prepare_envdata_define() {
    
    protocol=("kernel" "crypto" "system" "storage" "network" "user" "mitigation" "security" "tunning" "desktop" "develop" "docker" "kvm" "podman" "utility")
    protodir="$BPAT/bind/model"

    for proto in "${protocol[@]}"; do

        blackbird_progress "unpack $proto protocol"

        $level=$(printenv $proto"_protocol");

        if [[ ! -z $level ]] && [[ -e "$protodir/define/$proto/$level" ]];then
 
            source "$protodir/define/$proto/$level"
            blackbird_done

        else

            blackbird_info "$proto protocol not implemented for this profile"
        fi
    done
}


function blackbird_unpacks_prepare_envdata_loader() {

    envidata=("devices" "network" "storage" "protocol")

    ## load environtment data
    for path in "${envidata[@]}"; do

        blackbird_progress "unpack $path data"

        if [[ -e  "$envipath/$path" ]];then

            export $( xargs < "$envipath/$path") ;
            blackbird_done
        else

            blackbird_error "profile $path files not found"
        fi
    done
}


function blackbird_unpacks_prepare_envdata() {

    if [ -d "$BPAT/bind/config/profile/$BBPROFILE" ];then 

        export envipath="$BPAT/bind/config/profile/$BBPROFILE"

        blackbird_scope_init "Prepare Installation data"
        blackbird_unpacks_prepare_envdata_loader
        blackbird_scope_done

        blackbird_scope_init "Prepare Installation Protocol"
        blackbird_unpacks_prepare_envdata_profil
        blackbird_scope_done


    elif [ -d "$BPAT/bind/config/define/$BBPROFILE" ];then
        
        export envipath="$BPAT/bind/config/define/$BBPROFILE"

        blackbird_scope_init "Prepare Installation data"
        blackbird_unpacks_prepare_envdata_loader
        blackbird_scope_done

        blackbird_scope_init "Prepare Installation Protocol"
        blackbird_unpacks_prepare_envdata_define
        blackbird_scope_done

    else

        blackbird_error 'profile not register yet'
    fi
}



##
## PREPARE MAIN FUNCTION
function blackbird_unpacks_prepare_main() {

    # generate device sysinfo
    blackbird_unpacks_prepare_sysdata

    # generate system profile
    blackbird_unpacks_prepare_envdata
}